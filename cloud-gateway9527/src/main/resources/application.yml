server:
  port: 9527

# consul相关配置
spring:
  application:
    name: cloud-gateway #以微服务注册进consul或nacos服务列表内
  cloud:
    consul: #配置consul地址
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}

# gateway相关配置
    gateway:
      routes:
        - id: pay_routh1 #pay_routh1                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          predicates:
            - Path=/pay/gateway/get/**              # 断言，路径相匹配的进行路由
            - After=2024-03-13T20:24:46.635354100+08:00[Asia/Shanghai]  # 在什么时间之后可以访问
#            - Cookie=username,zzyy
#            - Header=X-Request-Id, \d+              # 请求头要有X-Request-Id属性并且值为整数
#            - Host=**.atguigu.com                   # Host: xxx.atguigu.com
#            - Query=username, \d+                   # 查询参数要带有username
#            - RemoteAddr=192.168.43.1/24             # 限制ip访问


        - id: pay_routh2 #pay_routh2                # 路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                # 匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          predicates:
            - Path=/pay/gateway/info/**              # 断言，路径相匹配的进行路由

        - id: pay_routh3 #pay_routh3
          uri: lb://cloud-payment-service                #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/filter/**              # 断言，路径相匹配的进行路由
#            - Path=/gateway/filter/**              # 断言，路径相匹配的进行路由
#            - Path=/XYZ/abc/{segment}           # 断言，为配合SetPath测试，{segment}的内容最后被SetPath取代
          filters:
#            - PrefixPath=/pay     # http://localhost:9527/pay/gateway/filter
#            - SetPath=/pay/gateway/{segment}  # {segment}表示占位符，你写abc也行但要上下一致
#            - RedirectTo=302, http://www.atguigu.com/ # 访问http://localhost:9527/pay/gateway/filter跳转到http://www.atguigu.com/

#            - AddRequestHeader=X-Request-atguigu1,atguiguValue1  # 请求头kv，若一头含有多参则重写一行设置
#            - AddRequestHeader=X-Request-atguigu2,atguiguValue2
#            - RemoveRequestHeader=sec-fetch-site      # 删除请求头sec-fetch-site
#            - SetRequestHeader=cache-control, no-cache-1 # 将请求头cache-control对应的值修改为no-cache-1
#            - AddRequestParameter=customerId,9527001  # 新增请求参数(没有参数才是9527001)
#            - RemoveRequestParameter=customerName   # 删除请求参数
#            - AddResponseHeader=X-Response-atguigu, BlueResponse # 新增请求参数X-Response-atguigu并设值为BlueResponse
#            - SetResponseHeader=Date,2099-11-11 # 设置回应头Date值为2099-11-11
#            - RemoveResponseHeader=Content-Type # 将默认自带Content-Type回应属性删除
